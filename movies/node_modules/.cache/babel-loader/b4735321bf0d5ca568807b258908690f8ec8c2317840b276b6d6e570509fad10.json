{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    isLoggedIn: false\n  },\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      localStorage.removeItem(\"userId\");\n      state.isLoggedIn = false;\n    }\n  }\n});\nconst adminSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isLoggedIn: false\n  },\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      localStorage.removeItem(\"adminId\");\n      localStorage.removeItem(\"token\");\n      state.isLoggedIn = false;\n    }\n  }\n});\nexport const adminActions = adminSlice.actions;\nexport const userActions = userSlice.actions;\n\n// storing of the configurations for the users and admins\nexport const store = configureStore({\n  reducer: {\n    user: userSlice.reducer,\n    admin: adminSlice.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","userSlice","name","initialState","isLoggedIn","reducers","login","state","logout","localStorage","removeItem","adminSlice","adminActions","actions","userActions","store","reducer","user","admin"],"sources":["/home/rida/Movie app/movies/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice} from \"@reduxjs/toolkit\"\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: {isLoggedIn: false},\n\n    reducers: {\n        login(state){\n            state.isLoggedIn = true;\n        },\n        logout(state){\n            localStorage.removeItem(\"userId\")\n            state.isLoggedIn = false;\n        }\n    }\n});\n\nconst adminSlice = createSlice({\n    name: \"auth\",\n    initialState: {isLoggedIn: false},\n\n    reducers: {\n        login(state){\n            state.isLoggedIn = true;\n        },\n        logout(state){\n            localStorage.removeItem(\"adminId\")\n            localStorage.removeItem(\"token\")\n            state.isLoggedIn = false;\n        }\n    }\n});\n\nexport const adminActions = adminSlice.actions;\nexport const userActions = userSlice.actions; \n\n// storing of the configurations for the users and admins\nexport const store = configureStore({\n    reducer: {\n    user: userSlice.reducer,\n    admin: adminSlice.reducer\n    }\n});"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAO,kBAAkB;AAE7D,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAACC,UAAU,EAAE;EAAK,CAAC;EAEjCC,QAAQ,EAAE;IACNC,KAAKA,CAACC,KAAK,EAAC;MACRA,KAAK,CAACH,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDI,MAAMA,CAACD,KAAK,EAAC;MACTE,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;MACjCH,KAAK,CAACH,UAAU,GAAG,KAAK;IAC5B;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMO,UAAU,GAAGX,WAAW,CAAC;EAC3BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAACC,UAAU,EAAE;EAAK,CAAC;EAEjCC,QAAQ,EAAE;IACNC,KAAKA,CAACC,KAAK,EAAC;MACRA,KAAK,CAACH,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDI,MAAMA,CAACD,KAAK,EAAC;MACTE,YAAY,CAACC,UAAU,CAAC,SAAS,CAAC;MAClCD,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAChCH,KAAK,CAACH,UAAU,GAAG,KAAK;IAC5B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMQ,YAAY,GAAGD,UAAU,CAACE,OAAO;AAC9C,OAAO,MAAMC,WAAW,GAAGb,SAAS,CAACY,OAAO;;AAE5C;AACA,OAAO,MAAME,KAAK,GAAGhB,cAAc,CAAC;EAChCiB,OAAO,EAAE;IACTC,IAAI,EAAEhB,SAAS,CAACe,OAAO;IACvBE,KAAK,EAAEP,UAAU,CAACK;EAClB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}